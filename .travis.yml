cache:
  apt: true
  directories:
    - ${HOME}/castxml
    - /usr/local
language: cpp

matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required
      compiler: gcc
      env: PYTHONPATH=/usr/local/lib/python2.7/dist-packages PATH=${PATH}:${HOME}/castxml/bin
    - os: osx
      osx_image: xcode7.2
      compiler: clang
  allow_failures:
    - os: osx

addons:
  apt:
    packages:
      - libboost-all-dev
      - python-dev
      - libode-dev
      - libeigen3-dev
      - freeglut3-dev
      - libassimp-dev

install:
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      brew tap homebrew/science;
      brew install boost-python ode eigen python cmake castxml libccd assimp;
      brew install https://raw.github.com/dartsim/homebrew-dart/master/fcl.rb;
    else
      sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test;
      sudo apt-get -y update;
      sudo apt-get -y install g++-5;
      export CXX=g++-5;
      if [ ! -e /usr/local/lib/libfcl.so ]; then
        wget -O - https://github.com/danfis/libccd/archive/v2.0.tar.gz | tar zxf - ;
        cd libccd-2.0;
        cmake .;
        sudo make install;
        cd ..;
        wget -O - https://github.com/flexible-collision-library/fcl/archive/0.4.0.tar.gz | tar zxf - ;
        cd fcl-0.4.0;
        cmake .;
        sudo make install;
        cd ..;
      fi;
      if [ ! -e ${HOME}/castxml ]; then
        wget -O - https://midas3.kitware.com/midas/download/item/318227/castxml-linux.tar.gz | tar zxf - -C ${HOME};
      fi;
    fi
  - sudo -H pip -v install pygccxml https://bitbucket.org/ompl/pyplusplus/get/1.7.0.tar.gz

script:
  # get OMPL subrepository
  - git clone --depth=1 --branch=master git://github.com/ompl/ompl.git

  # Create build directory
  - mkdir -p build
  - cd build

  # Configure
  - cmake -DOMPL_REGISTRATION=OFF -DCMAKE_INSTALL_PREFIX=tmp ..

  # TIMES OUT BECAUSE IT DOES NOT PRODUCE OUTPUT FOR MORE THAN 10 MINUTES
  # generate python bindings
  #- make -j4 update_bindings

  # Build
  - make -j4

  # Run unit tests
  # On OS X, exclude test_machine_specs; fails due to "lazy" memory freeing in Release mode (test passes in Debug builds).
  # On OS X, exclude test_random; fails due to bug in Boost.Random in 1.56.
  # On Linux, exclude test_machine_specs; started to fail when we switched to g++-5
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then
      ctest -E 'test_(machine_specs|random)';
    else
      ctest -E 'test_machine_specs';
    fi

/**
\page installation Installation

To compile OMPL the following two packages are required: 
- <a href="http://www.boost.org">Boost</a> (any recent version) and 
- <a href="http://www.cmake.org">CMake</a> (version 2.8 or higher). 
.
For the python bindings you need to have the python libraries and header files installed. If you also want to be able to regenerate the python bindings (which would be necessary if you change the C++ API), then you need to install Py++ (which, in turn, requires pygccxml and GCC-XML). We use the versions of Py++, pygccxml, and GCC-XML that are taken directly from their respective repositories, but official releases may work as well.

Below are installation instructions for <a href="#install_linux">Linux</a>, <a href="#install_osx">OS X</a>, and <a href="#install_windows">Windows</a>.

\section install_linux Installation on Linux

- Install Boost, CMake, and (optionally) the Python libraries and headers. With an Ubuntu/Debian Linux distribution, you can type:
\code
sudo apt-get install boost cmake python-devel
\endcode
- Create a build directory and run cmake:
\code
cd ompl
mkdir -p build/Release
cd build/Release
cmake -DCMAKE_BUILD_TYPE=Release ../..
\endcode
If you want a debug version of ompl, change "Release" to "Debug" above.
- Compile OMPL by typing \c make.
- Optionally, run the test programs by typing <tt>make check</tt>.
.

\section install_osx Installation on OS X

- It is easiest to install the dependencies through <a href="http://www.macports.org">MacPorts</a>, a package manager for OS X, so install MacPorts first.
- Install Boost, CMake, and the Python libraries and headers. If you have MacPorts installed, type the following:
\code
sudo port install cmake
sudo port install boost +python26
\endcode
If you omit the \c +python26 part, Boost.Python will not be installed, and the Python bindings for OMPL cannot be compiled.
- Create a build directory and run cmake:
\code
cd ompl
mkdir -p build/Release
cd build/Release
cmake -DCMAKE_BUILD_TYPE=Release ../..
\endcode
If you want a debug version of ompl, change "Release" to "Debug" above.
- Compile OMPL by typing \c make.
- Optionally, run the test programs by typing <tt>make check</tt>.
.

\section install_windows Installation on Windows

- Download and install CMake
- If you plan to use Microsoft Visual Studio, you can download Boost <a href="http://www.boostpro.com/download/">here</a>. If you want to use MinGW or Cygwin, follow the <a href="http://www.boost.org/doc/libs/1_43_0/more/getting_started/unix-variants.html">Unix installation instructions</a>.
- Optionally, download and install <a href="http://www.python.org/download/">Python</a>.
- Run CMake (either the GUI or the command line version). From the GUI it is easy to generate project files for Visual Studio or Makefiles.
- Build the "solution" ALL in Visual Studio, or run \c make (if you use MinGW/Cygwin).
.

*/
